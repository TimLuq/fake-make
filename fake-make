#!/bin/bash

# inherited vars not supported
function make {
    local ltargets=""
    local lvar
    local ldir="./"
    local lmakefile
    local ltmp
    local lout
    local lcwd="$(pwd)"
    while (( "$#" )); do
	if [[ "$1" == "-C" ]]; then
	    shift
	    ldir="${1%/}/"
	    shift
	else
	    ltargets="$ltargets $1"
	    shift
	fi
    done
    if [[ "$ltargets" == "" ]]; then
	ltargets="all"
    fi
    lmakefile="$ldir"makefile
    if [[ ! -f "$lmakefile" ]]; then
        echo "!!! Makefile not found in '$defdir'"
        return 1
    fi
    ltmp="/tmp/fmake_$(echo "${lcwd}_:_${ldir}_:_${ltargets}" | md5sum | cut -d ' ' -f 1).$$"
    grep -v "^[A-Z][A-Z]*=" "$lmakefile" > "$ltmp"
    lout="$(grep "^[A-Z][A-Z]*=" "$lmakefile" | tac)"
    if [[ "$lout" != "" ]]; then
	lout="$(sed 's/^\([A-Z][A-Z]*\)=\(.*\)/s\/$(\1)\/\2/')"
	if [[ "$lout" != "" ]]; then
	    printf "%s" "$lout" | xargs -t -I '{}' sed -i '{}' "$ltmp"
	fi
    fi
    sed -i 's/$(MAKE)/make/' "$ltmp"
    lout="$ltmp.prgrs"
    touch "$lout"

    cd "$ldir"
    if [[ "$(pwd)" != "$lcwd" ]]; then
	echo "--- Entering directory '$ldir'"
    fi
    for cvar in $ltargets; do
        lvar="$cvar"
        cd "$ldir"
	
        make_target "$ltmp" "$lvar" "$lout"
        exitcode="$?"
        cd "$lcwd"
        if [[ "$exitcode" != 0 ]]; then
            return "$exitcode"
        fi
    done
    cd "$ldir"
    if [[ "$(pwd)" != "$lcwd" ]]; then
	echo "--- Exiting directory '$ldir'"
        cd "$lcwd"
    fi
}

function make_target {
    local lm="$(grep "^$2=" "$3" | tail -n 1)"
    local lvar
    lm="${lm#*=}"
    if [[ "$lm" != "" ]]; then
	if [[ "$lm" == "0" ]]; then
	    echo "--- Target '$2' has already been comleted."
	else
	    echo "!!! Target '$2' has already failed."
	fi
	case "$lm" in
	    circular)
		echo "!!! Target '$2' is part of circular dependencies."
		lm=3
		;;
	    notfound)
		lm=2
		;;
	    [1-9]*)
		;;
	    *)
		lm=4
		;;
	esac
        return "$lm"
    fi
    echo "--- running target '$2'"


    lm="$(grep "^$2:" "$1" | tail -n 1)"
    if [[ "$lm" == "" ]]; then
	echo "$2=notfound" >> "$3"
	echo "!!! Target '$2' could not be found."
	return 2
    fi
    echo "$2=circular" >> "$3"

    lm="${lm#*:}"
    lm="${lm# }"
    lm="${lm# }"
    if [[ "$lm" != "" ]]; then
	echo "--- targeting dependencies: '$lm'"
        for cvar in $lm; do
	    make_target "$1" "$cvar" "$3"
	done
    fi

    lm="$(grep -n "^$2" "$1" | tail -n 1 | cut -d : -f 1)"
    lvar="$(tail -n "+$lm" "$1" | grep '^[^'$'\t''].*:' | tail -n 1)"
    if [[ "$lvar" == "" ]]; then
	lvar="$(wc -l "$1")"
    else
	lvar="$(grep -n "^$lvar" "$1" | head -n 1 | cut -d : -f 1)"
    fi
    lvar=$(($lvar - $lm - 1))
    echo "--- target '$2' (line $lm) consists of $lvar action lines"
    if [[ "$lvar" == 0 ]]; then
	echo "$2=0" >> "$3"
	return 0
    fi
    #echo "$lvar"
    lvar="$(tail -n "+$lm" "$1" | head -n "$lvar" | grep -o '^'$'\t''[^#][^#]*' | grep -o '[^'$'\t''].*')"
    if [[ "$lvar" != "" ]]; then
	printf "%s" "$lvar" > "$3.targeted"
	echo  '#!/bin/bash' > "$3.target"
	printf "%s" "$lvar" | xargs -I '{}' printf 'echo "%s"\n( %s )\nretval=$?\nif [[ "$retval" != "0" ]]; then\n  return "$retval"\nfi\n' '{}' '{}' >> "$3.target"
	lvar="$(pwd)"
	make_run "$3.target"
	retval=$?
	cd "$lvar"
	if [[ "$retval" != 0 ]]; then
	    echo "!!! Target '$2' failed."
	    echo "$2=$retval" >> "$3"
	    return "$retval"
	fi
    fi
    echo "$2=0" >> "$3"
    return 0
}

function make_run {
    . "$1"
    return 0
}

make "$@"
exit "$?"
